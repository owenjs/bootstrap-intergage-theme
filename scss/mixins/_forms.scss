// This mixin uses an `if()` technique to be compatible with Dart Sass
// See https://github.com/sass/sass/issues/1873#issuecomment-152293725 for more details
@mixin form-validation-state-selector($state) {
  @if ($state == "valid" or $state == "invalid") {
    .was-validated #{if(&, "&", "")}:#{$state},
    #{if(&, "&", "")}.is-#{$state} {
      @content;
    }
  } @else {
    #{if(&, "&", "")}.is-#{$state} {
      @content;
    }
  }
}

@mixin form-control-validation-state($color, $icon) {
  border-color: $color;

  @if $enable-validation-icons {
    padding-right: $input-height-inner;
    background-image: escape-svg($icon);
    background-repeat: no-repeat;
    background-position: right $input-height-inner-quarter center;
    background-size: $input-height-inner-half $input-height-inner-half;
  }

  &:focus {
    border-color: $color;
    box-shadow: 0 0 0 $input-focus-width rgba($color, $input-btn-focus-color-opacity);
  }
}

@mixin form-textarea-validation-state() {
  @if $enable-validation-icons {
    padding-right: $input-height-inner;
    background-position: top $input-height-inner-quarter right $input-height-inner-quarter;
  }
}

@mixin form-select-validation-state($color, $icon) {
  border-color: $color;

  @if $enable-validation-icons {
    padding-right: $form-select-feedback-icon-padding-right;
    background-image: escape-svg($form-select-indicator), escape-svg($icon);
    background-position: $form-select-bg-position, $form-select-feedback-icon-position;
    background-size: $form-select-bg-size, $form-select-feedback-icon-size;
  }

  &:focus {
    border-color: $color;
    box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
  }
}

@mixin form-check-validation-state($color) {
  border-color: $color;

  &:checked {
    @include gradient-bg(lighten($color, 10%), escape-svg($form-check-input-checked-bg-image));
  }

  &:focus {
    box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
  }

  ~ .form-check-label {
    color: $color;
  }
}

@mixin form-validation-state($state, $color, $icon) {
  .#{$state}-feedback,
  #{if($state == "invalid", ".FormFieldErrorText", "")} { // CMS Invalid Text Class Name
    display: none;
    width: 100%;
    margin-top: $form-feedback-margin-top;
    @include font-size($form-feedback-font-size);
    color: $color;
  }

  .#{$state}-tooltip {
    position: absolute;
    top: 100%;
    z-index: 5;
    display: none;
    max-width: 100%; // Contain to parent when possible
    padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;
    margin-top: .1rem;
    @include font-size($form-feedback-tooltip-font-size);
    line-height: $form-feedback-tooltip-line-height;
    color: color-contrast($color);
    background-color: rgba($color, $form-feedback-tooltip-opacity);
    @include border-radius($form-feedback-tooltip-border-radius);
  }

  @include form-validation-state-selector($state) {
    ~ .#{$state}-feedback,
    ~ .#{$state}-tooltip {
      display: block;
    }
  }

  // CMS Invalid
  @if ($state == "invalid") {
    // Error Text Wrapper
    .c2form_flderror_input ~ .FormFieldErrorText {
      display: block;
    }

    // Form Control
    .c2form_input .c2form_flderror_input input[type="email"],
    .c2form_input .c2form_flderror_input input[type="text"],
    .c2form_input .c2form_flderror_input input[type="password"],
    .c2form_input .c2form_flderror_input textarea {
      @include form-control-validation-state($color, $icon);
    }

    // Textarea
    .c2form_input .c2form_flderror_input textarea {
      @include form-textarea-validation-state();
    }

    // Selects
    .c2form_input .c2form_flderror_input select {
      @include form-select-validation-state($color, $icon);
    }

    // Checkboxes and Radio Buttons
    .c2form_input .c2form_flderror_input input[type="checkbox"],
    .c2form_input .c2form_flderror_input input[type="radio"] {
      @include form-check-validation-state($color);
    }
  }

  
  .form-control {
    @include form-validation-state-selector($state) {
      @include form-control-validation-state($color, $icon);
    }
  }

  // stylelint-disable-next-line selector-no-qualifying-type
  textarea.form-control {
    @include form-validation-state-selector($state) {
      @include form-textarea-validation-state();
    }
  }

  .form-select {
    @include form-validation-state-selector($state) {
      @include form-select-validation-state($color, $icon);
    }
  }

  .form-check-input {
    @include form-validation-state-selector($state) {
      @include form-check-validation-state($color);
    }
  }
  .form-check-inline .form-check-input {
    ~ .#{$state}-feedback {
      margin-left: .5em;
    }
  }

  // custom file
  .form-file-input {
    @include form-validation-state-selector($state) {
      ~ .form-file-label {
        border-color: $color;
      }

      &:focus {
        ~ .form-file-label {
          border-color: $color;
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }
  }
}
